<%- include('./includes/header'); -%>

<section class="dashboard-wrapper">
  <% console.log('orderzzz', orders) %>
  <% if (company && orders.length > 1) { %> 

    <%- include('./includes/dashboard_top'); -%>
    <canvas id="myChart" class="chart-orders"></canvas>    
    <!-- Transform chart data on server then serve via window -->
    <!-- Currently calculates the numerical difference between the two order numbers -->
    <script>
      window.newData = <%- JSON.stringify(orders) %>
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"></script>

  <% } else { %>
    <br />
    <h2><%= company.nameIdentifier %></h2>
    <h5>Not enough data, yet :(</h5>
    <p>
      <strong>
        When we have enough datapoints for this Company its insights will be shown
      </strong>
    </p> 
    <div class="dashboard-no-data">
      <img src="/images/ellen_insights_graph.jpg" alt="our graphs">
    </div>
  <% } %>

</section>

<!--  resolve promise each iteration and use promise.all to resolve all and continue!! -->
<script>
  try {
    // note if NODE_ENV is 'production' EJS is cached and needs server restart to see changes
    let setAspectRatio = 2.5;
    let timeStepSize = 2
    if (window.innerWidth < 600) {
      setAspectRatio = 1.5,
      timeStepSize = 8
    }

    let ctx = document.getElementById('myChart');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [{
                label: 'Avg orders',
                data: window.newData,
                steppedLine: true,
                backgroundColor: [
                    'rgba(216, 216, 216, 0.3)',
                ],
                borderColor: [
                    'rgba(0, 0, 0, 0.9)',
                ],
                borderWidth: 2,
                borderCapStyle: 'round'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
                xAxes: [{
                  type: 'time',
                  distribution: 'linear',
                  time: {
                    unit: 'month',
                    stepSize: timeStepSize,
                    tooltipFormat: 'MMM Do YYYY'
                  }
                }]
            },
            tooltips: {
              mode: 'index',
              intersect: false
            },
            hover: {
              mode: 'index',
              intersect: false
            },
            cubicInterpolationMode: 'monotone',
            responsive: true,
            aspectRatio: setAspectRatio
        }
    });
  } catch(err) {
    console.log('no company data');
  }
</script>

<% if (currentUser.status === 'admin') { %>
  <ul class="quick-data">
    <li><strong>&nbsp;email:</strong> <%= company.emailIdentifier %></li>&nbsp;|
    <li><strong>&nbsp;prefix:</strong> <%= company.orderPrefix %></li>&nbsp;| 
    <li><strong>&nbsp;added to DB:</strong> <%= company.createdAt %></li>&nbsp;
  </ul>

  <section class="all-email-record">
    <h4>All emails submitted for this company</h4>
    <div class="orders-by-company-list">
  <table>
        <th>Subject</th>  
        <th>Submitter</th>  
        <th>Order No.</th>  
        <th>Order Date</th>  
        <th>Content</th> 
    <% if (typeof orders != 'undefined') {  
      allOrders.forEach((order) => { %>
        <tr>
        <td><%= order.subjectLine || order.tdlainContent %></td>
        <td><%= order.customerEmail %></td>
        <td>
          <form class="internalOrderUpdate" action="" data-order-id="<%= order.id %>">
            <input type="text" placeholder="<%= order.orderNumber %>"></a>
            <input type="hidden">
          </form>
        </td>
        <td><%= order.orderDate %></td>
        <td>
          <div class="overflow-container">
            <%= order.plainContent %>
          </div>
        </td>
      </td>
    <% })} %>
  </table>
    </div>
  </section>
  <script src="../cash-dom/dist/cash.min.js"></script>
  <script src="../axios/dist/axios.min.js"></script>
  <script>
  $('.internalOrderUpdate').on('submit', function(e) {
    e.preventDefault();
    const inputName = $(e.target).find('input[type=text]').val();

    axios({
      method: 'post',
      url: `/api/orders/update/${$(e.target).data('order-id')}`,
      data: {
        orderNumber: inputName
      }}).then(function (response) {
          $(e.target).find('input[type=text]').val('');
          $(e.target).find('input[type=text]').attr('placeholder', inputName);
         console.log(response);
      }).catch(function (error) {
        console.log(error);
      });
  });
</script> 
<% } %>
  
<%- include('./includes/footer'); -%>